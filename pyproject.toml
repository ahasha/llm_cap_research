[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".dvc",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.poetry]
name = "llm_cap_research"
version = "0.1.0"
description = "Learning how to do document extraction with LLMs"
authors = ["Alex Hasha <alex@hashadatascience.com>"]
readme = "README.md"
packages = [{include = "llm_cap_research"}]

[tool.poetry.scripts]
llm_cap_research = "llm_cap_research.analyze:app"

[tool.poetry.dependencies]
dvc = "^3.38.0"
dvc-gs = "^3.0"
dvc-ssh = "^4.1.1"
jupyter = "^1.0.0"
matplotlib = "^3.7.1"
numpy = "^1.23.0"
python = "~3.11"
pandas = "^2.0.0"
scikit-learn = "^1.2.2"
python-dotenv = "^1.0.0"
pypdf = "^4.2.0"
langchain-openai = "^0.1.7"
typer = "^0.12.3"
ruff = "^0.4.5"
dvclive = "^3.46.0"

[tool.poetry.group.dev.dependencies]
sphinx = "^6.1.3"
nbsphinx = "^0.9.1"
pre-commit = "^3.2.2"
myst-parser = "^1.0.0"
sphinx-rtd-theme = "^1.2.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
brunette = "^0.2.8"
pytest = "^7.3.1"
sphinxcontrib-mermaid = "^0.8.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
